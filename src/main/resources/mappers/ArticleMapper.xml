<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zeroxn.blog.web.article.mapper.ArticleMapper">

    <select id="getArticleList" resultType="Article">
        select id, title, summary, cover, click_num, is_comment, create_time, update_time, status from tb_article
        <where>
            <if test="title != null and title != ''">
                title like '%${title}%'
            </if>
            <if test="status != null">
                status = #{status}
            </if>
        </where>
        order by create_time desc
    </select>
    <select id="getArticleListByIdList" resultType="Article">
        select id, title, summary, cover from tb_article where id in
        <foreach collection="articleIdList" item="articleId" separator="," open="(" close=")">
            #{articleId}
        </foreach>
        and status = 1
    </select>
    <select id="getArticleById" resultType="Article">
        select id, title, summary, cover, click_num, is_comment, create_time, update_time, status
        <if test="isGetContent">
            , content
        </if>
        from tb_article where id = #{id}
    </select>
    <insert id="saveArticle" useGeneratedKeys="true" keyProperty="id">
        insert into
        tb_article(title, summary, cover, content, create_time, update_time, status)
        values (#{title}, #{summary}, #{cover}, #{content}, #{createTime}, #{updateTime}, #{status})
    </insert>
    <update id="updateArticle">
        update tb_article
        set title = #{title}, summary = #{summary}, cover = #{cover}, content = #{content}, update_time = #{updateTime}
        where id = #{id}
    </update>
    <update id="updateArticleType">
        update tb_article set status = #{status}, is_comment = #{isComment} where id = #{id}
    </update>
    <delete id="deleteArticle">
        delete from tb_article where id = #{id}
    </delete>
    <select id="getCurrentArticleUpArticle" resultType="Article">
        select id, title, cover from tb_article where create_time &lt; #{createTime} order by create_time desc limit 1
    </select>
    <select id="getCurrentArticleDownArticle" resultType="Article">
        select id, title, cover from tb_article where create_time &gt; #{createTime} order by create_time limit 1
    </select>
    <select id="searchArticleByTitle" resultType="Article">
        select id, title from tb_article where title like '%${title}%' and status = 1 order by create_time desc limit 7
    </select>
    <select id="getArticleClickNumAndTitleList" resultType="Article">
        select title, click_num from tb_article where status = 1
    </select>
    <update id="updateArticleClickNumByTitle">
        update tb_article set click_num = #{clickNum} where title = #{title}
    </update>
</mapper>